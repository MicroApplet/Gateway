kind: pipeline
type: docker
name: gateway


steps: # 定义流水线执行步骤，这些步骤将顺序执行
  - name: package # 流水线名称
    image: maven:3.8.6-openjdk-8 # 定义创建容器的Docker镜像
    pull: if-not-exists
    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
      - name: maven-build
        path: /app/build # 将应用打包好的Jar和执行脚本挂载出来
      - name: maven-cache
        path: /root/.m2
      - name: ssh-cache
        path: /root/.ssh
    commands: # 定义在Docker容器中执行的shell命令
      # 开始打包maven工程
      - mvn clean package -Dmaven.test.skip=true
#      - cd target
#      - ls -la
      - cp target/GatewayApplication.jar /app/build/Gateway.jar
      - cp *.sh /app/build
      - cp Dockerfile /app/build/Dockerfile

  - name: restart
    image: plugins/docker
    volumes:
      # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
      - name: maven-build
        path: /app/build # 将应用打包好的Jar和执行脚本挂载出来
      - name: docker
        path: /var/run/docker.sock # 挂载宿主机的docker
      - name: env
        path: /root/.env
    settings:
      dockerfile: /app/build/Dockerfile
    commands:
      # 定义在Docker容器中执行的shell命令
      - cd /app/build
      - chmod +x *.sh
      - sh docker.sh
    environment:
      nacos_server:
        from_secret: nacos-server
      nacos_namespace:
        from_secret: nacos-namespace
      nacos_username:
        from_secret: nacos-username
      nacos_password:
        from_secret: nacos-password
      nacos_group:
        from_secret: nacos-group

volumes: # 定义流水线挂载目录，用于共享数据
  - name: maven-cache
    host:
      path: /home/asialjim/.m2
  - name: ssh-cache
    host:
      path: /home/asialjim/.ssh
  - name: docker
    host:
      path: /var/run/docker.sock
  - name: maven-build
    host:
      path: /home/asialjim/.app/docker/gitee/Gateway
  - name: env
    host:
      path: /home/asialjim/.env